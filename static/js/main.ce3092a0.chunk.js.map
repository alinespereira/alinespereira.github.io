{"version":3,"sources":["components/GameOfLifeGrid.tsx","components/SEO.tsx","components/Header.tsx","pages/Home.tsx","pages/Destaques.tsx","pages/post/HelloWorld.tsx","helpers/GameOfLifeSimulator.tsx","pages/post/GameOfLife.tsx","components/Body.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CellStatus","SEO","Helmet","rel","sizes","href","type","color","name","content","charSet","lang","Component","Header","data-responsive-toggle","data-hide-for","className","data-toggle","id","to","isVertical","horizontalOnMedium","data-responsive-menu","is","isNested","Home","vertical","Destaques","CodeBlock","lazy","HelloWorld","fallback","path","language","GameOfLifeGrid","width","Math","min","window","screen","availWidth","availHeight","rectWidth","floor","this","props","gridX","rectHeight","height","svg","d3","attr","selectAll","remove","data","cells","enter","append","d","cellStatus","Alive","posX","posY","NEIGHBORS","evolve","i","j","gridY","livingNeighbors","map","dPosX","dPosY","filter","s","length","includes","Dead","GameOfLife","intervalId","state","uuidV4","play","updateGridXSize","bind","updateGridYSize","resetGrid","randomizeGrid","startSimulation","stepSimulation","stopSimulation","setState","random","setInterval","newCells","simulate","clearInterval","undefined","event","parseInt","target","value","gridMin","gridMax","small","medium","large","max","onChange","disabled","alignment","Foundation","CENTER","isExpanded","size","onClick","defaultProps","Body","exact","App","$","document","foundation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TagManager","initialize","gtmId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce3092a0.chunk.js","sourcesContent":["import { Component } from 'react'\nimport * as d3 from 'd3'\n\nimport './GameOfLifeGrid.scss'\n\nexport interface GameOfLifeProps {\n  gridMin?: number,\n  gridMax?: number\n}\n\nexport enum CellStatus {\n  Alive = 1,\n  Dead = 0\n}\n\nexport interface Cell {\n  posX: number,\n  posY: number,\n  cellStatus: CellStatus\n}\n\nexport interface GameOfLifeState {\n  id?: string,\n  gridX: number,\n  gridY: number,\n  cells: Array<Array<Cell>>,\n  play?: boolean\n}\n\nexport class GameOfLifeGrid extends Component<GameOfLifeState> {\n  \n  componentDidMount() {\n    const width = 0.6 * Math.min(window.screen.availWidth, window.screen.availHeight)\n    const rectWidth = Math.floor(width / this.props.gridX)\n    const rectHeight = rectWidth\n    const height = this.props.gridX * rectWidth\n\n    const svg = d3.select('#game-board')\n    svg\n      .attr('width', width)\n      .attr('height', height)\n\n    svg\n      .selectAll('*')\n      .remove()\n\n    const row = svg.selectAll(\".row\")\n      .data<Array<Cell>>(this.props.cells)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\")\n\n    row\n      .selectAll(\".square\")\n      .data(d => d)\n      .enter().append(\"rect\")\n      .attr(\"class\", d => `square ${d.cellStatus === CellStatus.Alive? \"alive\" : \"dead\"}`)\n      .attr(\"x\", d => d.posX * rectWidth)\n      .attr(\"y\", d => d.posY * rectHeight)\n      .attr(\"width\", rectWidth)\n      .attr(\"height\", rectHeight)\n  }\n\n  render() {\n    return (\n      <svg id=\"game-board\" />\n    )\n  }\n}\n","import { Component } from \"react\";\nimport Helmet from \"react-helmet\";\n\nclass SEO extends Component {\n  render() {\n    return (\n      <Helmet>\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n        <link rel=\"manifest\" href=\"/site.webmanifest\" />\n        <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\n        <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n\n        <meta charSet=\"utf-8\" />\n        <html lang=\"pt-br\" />\n        <title>This is: Aline</title>\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO","import { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport *  as Foundation from 'react-foundation'\n\nimport './Header.scss'\n\nclass Header extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Foundation.TitleBar data-responsive-toggle=\"responsive-menu\" data-hide-for=\"medium\">\n          <button className=\"menu-icon\" type=\"button\" data-toggle=\"responsive-menu\"></button>\n          <Foundation.TitleBarTitle>Menu</Foundation.TitleBarTitle>\n        </Foundation.TitleBar>\n\n        <Foundation.TopBar id=\"responsive-menu\">\n          <Link className=\"show-for-medium\" to=\"/\">\n            <Foundation.Icon name=\"logo\"></Foundation.Icon>\n          </Link>\n          <Foundation.TopBarLeft>\n            <Foundation.Menu isVertical horizontalOnMedium data-responsive-menu=\"accordion medium-dropdown\">\n              <Foundation.MenuItem><Link to=\"/\">This is: Aline</Link></Foundation.MenuItem>\n              <Foundation.MenuItem is=\"vertical\">\n                <Link to=\"/destaques\">Destaques</Link>\n                <Foundation.Menu isVertical isNested>\n                  <Foundation.MenuItem>\n                    <Link to=\"/post/jogo-da-vida\">Jogo da vida</Link>\n                    <Link to=\"/post/hello-world\">Hello, World!</Link>\n                  </Foundation.MenuItem>\n                </Foundation.Menu>\n              </Foundation.MenuItem>\n            </Foundation.Menu>\n          </Foundation.TopBarLeft>\n        </Foundation.TopBar>\n      </Fragment>\n    )\n  }\n}\n\nexport default Header\n","import { Component } from 'react'\nimport * as Foundation from 'react-foundation'\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n  render() {\n    return (\n      <Foundation.Grid>\n        <Foundation.Grid vertical>\n          <h1>Welcome Home!</h1>\n\n          <p>É novo por aqui? Então venha conferir meu <Link to='/post/hello-world'>primeiro post!</Link></p>\n\n          <p>Divirta-se!</p>\n        </Foundation.Grid>\n      </Foundation.Grid>\n    )\n  }\n}\n\nexport default Home\n","import { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as Foundation from 'react-foundation'\n\nclass Destaques extends Component {\n  render() {\n    return (\n      <Foundation.Grid>\n        <Foundation.Grid vertical>\n          <h1>Destaques</h1>\n          <Link to=\"/post/jogo-da-vida\">Jogo da vida</Link>\n          <Link to=\"/post/hello-world\">Hello, World!</Link>\n        </Foundation.Grid>\n      </Foundation.Grid>\n\n    )\n  }\n}\n\nexport default Destaques\n","import { Component, Suspense, lazy } from 'react'\nimport 'highlight.js/styles/solarized-dark.css'\n\n// import fs from 'fs'\n\nimport * as Foundation from 'react-foundation'\n\nconst CodeBlock = lazy(() => import('../../components/CodeBlock'))\n\nclass HelloWorld extends Component {\n  // componentDidMount() {\n  //   hljs.highlightAll()\n  // }\n  \n  render() {\n    return (\n      <Foundation.Grid>\n        <Foundation.Grid vertical>\n          <h1>Hello, World!</h1>\n\n          <p>\n            Como uma das propostas deste espaço é falar sobre linguagens de programação,\n            tive a ideia de iniciar com o clássico <code>Hello, World!</code>.\n            A ideia é poder discutir vários assuntos diferentes, então nada mais adequado\n            que dizer <em>Hello, World!</em> em 10 linguagens diferentes.\n          </p>\n\n          <p>Vamos lá?</p>\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <h2>C</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.c\" language=\"c\" />\n\n            <h2>C++</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.cpp\" language=\"c++\" />\n\n            <h2>Python</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.py\" language=\"python\" />\n\n            <h2>Ruby</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.rb\" language=\"ruby\" />\n\n            <h2>Julia</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.jl\" language=\"julia\" />\n\n            <h2>Scala</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.scala\" language=\"scala\" />\n\n            <h2>Java</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.java\" language=\"java\" />\n\n            <h2>PHP</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.php\" language=\"php\" />\n\n            <h2>Haskell</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.hs\" language=\"haskell\" />\n\n            <h2>Javascript</h2>\n            <CodeBlock path=\"/resources/code/HelloWorld.js\" language=\"javascript\" />\n          </Suspense>\n\n        </Foundation.Grid>\n      </Foundation.Grid>\n    )\n  }\n}\n\nexport default HelloWorld\n","import { Cell, CellStatus } from '../components/GameOfLifeGrid'\n\nconst NEIGHBORS = [\n  [-1, -1],\n  [-1, 0],\n  [-1, 1],\n  [0, -1],\n  [0, 1],\n  [1, -1],\n  [1, 0],\n  [1, 1]\n]\n\nfunction evolve(i: number, j: number, cells: Array<Array<Cell>>, gridX: number, gridY: number) {\n  const {\n    posX,\n    posY,\n    cellStatus\n  } = cells[i][j]\n  \n  const livingNeighbors = NEIGHBORS\n    .map(([dPosX, dPosY]) =>\n      cells[(gridX + posX + dPosX) % gridX][(gridY + posY + dPosY) % gridY].cellStatus\n    )\n    .filter(s => s === CellStatus.Alive)\n    .length\n  \n  if ((cellStatus === CellStatus.Alive && [2, 3].includes(livingNeighbors)) ||\n      (cellStatus === CellStatus.Dead && livingNeighbors === 3)) {\n    return CellStatus.Alive\n  } else  {\n    return CellStatus.Dead\n  }\n}\n\nfunction simulate(cells: Array<Array<Cell>>, gridX: number, gridY: number): Array<Array<Cell>> {\n  const newCells: Array<Array<Cell>> = []\n\n  for (let posX = 0; posX < cells.length; posX++) {\n    newCells[posX] = []\n    for ( let posY = 0; posY < cells[posX].length; posY++) {\n      newCells[posX][posY] = {\n        posX, posY,\n        cellStatus: evolve(posX, posY, cells, gridX, gridY)\n      }\n    }\n  }\n  return newCells\n}\n\nexport { simulate }\n","import { ChangeEvent, Component } from 'react'\nimport {\n  GameOfLifeProps,\n  GameOfLifeState,\n  Cell,\n  CellStatus,\n  GameOfLifeGrid\n} from '../../components/GameOfLifeGrid'\nimport { simulate } from '../../helpers/GameOfLifeSimulator'\nimport { v4 as uuidV4 } from 'uuid'\n\nimport * as Foundation from 'react-foundation'\nimport { Pause, Shuffle, Play, Next, Trash } from '@styled-icons/foundation'\n\nclass GameOfLife extends Component<GameOfLifeProps, GameOfLifeState> {\n  intervalId?: number\n  \n  constructor(props: GameOfLifeProps) {\n    super(props)\n    this.updateGridXSize = this.updateGridXSize.bind(this)\n    this.updateGridYSize = this.updateGridYSize.bind(this)\n    this.resetGrid = this.resetGrid.bind(this)\n    this.randomizeGrid = this.randomizeGrid.bind(this)\n    this.startSimulation = this.startSimulation.bind(this)\n    this.stepSimulation = this.stepSimulation.bind(this)\n    this.stopSimulation = this.stopSimulation.bind(this)\n    this.resetGrid()\n  }\n  \n  static defaultProps = {\n    gridMin: 10,\n    gridMax: 200\n  }\n\n  state = {\n    gridX: 50,\n    gridY: 50,\n    cells: [],\n    id: uuidV4(),\n    play: false\n  }\n\n  componentDidMount() {\n    this.resetGrid()\n  }\n\n  resetGrid() {\n    const cells: Array<Array<Cell>> = []\n\n    for (let posX = 0; posX < this.state.gridX; posX++) {\n      cells[posX] = []\n      for (let posY = 0; posY < this.state.gridX; posY++) {\n        cells[posX][posY] = { posX, posY, cellStatus: CellStatus.Dead }\n      }\n    }\n    this.setState({\n      cells,\n      id: uuidV4()\n    })\n  }\n\n  randomizeGrid() {\n    const aliveProbability = 0.3\n    const cells: Array<Array<Cell>> = []\n\n    for (let posX = 0; posX < this.state.gridX; posX++) {\n      cells[posX] = []\n      for (let posY = 0; posY < this.state.gridX; posY++) {\n        cells[posX][posY] = {\n          posX,\n          posY,\n          cellStatus: Math.random() < aliveProbability ? CellStatus.Alive : CellStatus.Dead }\n      }\n    }\n    this.setState({\n      cells,\n      id: uuidV4()\n    })\n  }\n\n  startSimulation() {\n    if (!this.state.play && !this.intervalId)\n      this.intervalId = window.setInterval(this.stepSimulation, 500)\n    this.setState({\n      play: true,\n      id: uuidV4()\n    })\n  }\n\n  stepSimulation() {\n    const cells = simulate(this.state.cells, this.state.gridX, this.state.gridY)\n    this.setState({\n      cells,\n      id: uuidV4()\n    })\n  }\n\n  stopSimulation() {\n    window.clearInterval(this.intervalId)\n    this.intervalId = undefined\n    this.setState({ play: false, id: uuidV4() })\n  }\n\n  updateGridXSize(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({ gridX: parseInt(event.target.value) }, this.resetGrid)\n  }\n\n  updateGridYSize(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({ gridY: parseInt(event.target.value) }, this.resetGrid)\n  }\n  \n  render() {\n    const {\n      gridX,\n      // gridY\n    } = this.state\n\n    const {\n      gridMin,\n      gridMax\n    } = this.props\n\n    return (\n      <Foundation.Grid vertical>\n        <Foundation.Cell small={12}>\n          <h1>Jogo da Vida</h1>\n        </Foundation.Cell>\n\n\n        <Foundation.Grid className=\"grid-padding-x\">\n          <Foundation.Cell small={6} medium={4} large={2}>\n            <input type=\"number\" id=\"horizontal-grid-size\"\n              min={gridMin} max={gridMax}\n              value={gridX}\n              onChange={this.updateGridXSize}\n            />\n          </Foundation.Cell>\n          <Foundation.Cell small={6} medium={4} large={2}>\n            <input className=\"hide\" type=\"number\" id=\"vertical-grid-size\"\n              disabled\n              min={gridMin} max={gridMax}\n              //value={gridY}\n              onChange={this.updateGridYSize}\n            />\n          </Foundation.Cell>\n        </Foundation.Grid>\n\n        <Foundation.Grid className=\"grid-padding-x\">\n          <Foundation.Cell small={12} medium={6} large={4}>\n            <Foundation.Menu alignment={Foundation.Alignments.CENTER} isExpanded>\n              <Foundation.MenuItem>\n                <Trash size={32}\n                  onClick={this.resetGrid}\n                />\n              </Foundation.MenuItem>\n              <Foundation.MenuItem>\n                <Shuffle size={32}\n                  onClick={this.randomizeGrid}\n                />\n              </Foundation.MenuItem>\n              <Foundation.MenuItem>\n                <Play size={32} \n                  onClick={this.startSimulation}\n                />\n              </Foundation.MenuItem>\n              <Foundation.MenuItem>\n                <Next size={32}\n                  onClick={this.stepSimulation}\n                />\n              </Foundation.MenuItem>\n              <Foundation.MenuItem>\n                <Pause size={32} \n                  onClick={this.stopSimulation}\n                />\n              </Foundation.MenuItem>\n            </Foundation.Menu>\n          </Foundation.Cell>\n        </Foundation.Grid>\n\n        <Foundation.Grid>\n          <Foundation.Cell small={12} className=\"grid-padding-y\">\n            <div className=\"text-center\" id=\"game\">\n              <GameOfLifeGrid\n                key={this.state.id}\n                gridX={this.state.gridX}\n                gridY={this.state.gridY}\n                cells={this.state.cells}\n                play={this.state.play}\n              />\n            </div>\n          </Foundation.Cell>\n        </Foundation.Grid>\n      </Foundation.Grid>\n    )\n  }\n}\n\nexport default GameOfLife\n","import { Component } from 'react'\nimport {\n  Switch,\n  Route\n} from 'react-router-dom'\nimport *  as Foundation from 'react-foundation'\n\nimport Home from '../pages/Home'\nimport Destaques from '../pages/Destaques'\nimport HelloWorld from '../pages/post/HelloWorld'\nimport GameOfLife from '../pages/post/GameOfLife'\n\nclass Body extends Component {\n  render() {\n    return (\n      <Foundation.GridContainer>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/post/hello-world\">\n            <HelloWorld />\n          </Route>\n          <Route path=\"/post/jogo-da-vida\">\n            <GameOfLife />\n          </Route>\n          <Route path=\"/destaques\">\n            <Destaques />\n          </Route>\n        </Switch>\n      </Foundation.GridContainer>\n    )\n  }\n}\n\nexport default Body\n","import { Component } from 'react'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nimport './App.scss'\n\nimport SEO from './components/SEO'\nimport Header from './components/Header'\nimport Body from './components/Body'\n\nimport $ from 'jquery'\nimport 'what-input'\nimport 'foundation-sites'\n\nclass App extends Component {\n  componentDidMount() {\n    $(document).foundation()\n  }\n\n  render() {\n    return (\n      <Router>\n        <SEO />\n        <Header />\n        <Body />\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport TagManager from 'react-gtm-module'\n\nconst tagManagerArgs = {\n  gtmId: 'GTM-N9QLBJ6'\n}\n\nTagManager.initialize(tagManagerArgs)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}