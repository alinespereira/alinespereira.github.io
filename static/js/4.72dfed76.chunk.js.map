{"version":3,"sources":["components/CodeBlock.tsx"],"names":["CodeBlock","state","isFetch","code","a","fetch","this","props","path","response","text","data","setState","hljs","highlightAll","language","className","dangerouslySetInnerHTML","__html","escape","Component"],"mappings":"6PAcMA,E,4MACJC,MAAwB,CACtBC,SAAS,EACTC,KAAM,I,8FAGR,8BAAAC,EAAA,sEACyBC,MAAMC,KAAKC,MAAMC,MAD1C,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQC,EAFR,OAGEL,KAAKM,SAAS,CACZT,KAAMQ,EACNT,SAAS,IAEXW,IAAKC,eAPP,gD,0EAUA,WAAU,IACAC,EAAaT,KAAKC,MAAlBQ,SACAZ,EAASG,KAAKL,MAAdE,KAER,OACE,8BACE,sBAAMa,UAAWD,EACfE,wBACE,CAAEC,OAAQZ,KAAKL,MAAMC,QAAUiB,IAAOhB,GAAQ,Y,GAxBlCiB,aAgCTpB","file":"static/js/4.72dfed76.chunk.js","sourcesContent":["import { Component } from 'react'\nimport hljs from 'highlight.js'\nimport escape from 'escape-html'\n\ninterface CodeBlockProps {\n  path: string,\n  language: string\n}\n\ninterface CodeBlockState {\n  code: string,\n  isFetch: boolean\n}\n\nclass CodeBlock extends Component<CodeBlockProps> {\n  state: CodeBlockState = {\n    isFetch: false,\n    code: ''\n  }\n\n  async componentDidMount() {\n    const response = await fetch(this.props.path)\n    const data = await response.text()\n    this.setState({\n      code: data,\n      isFetch: true\n    })\n    hljs.highlightAll()\n  }\n\n  render() {\n    const { language } = this.props\n    const { code } = this.state\n\n    return (\n      <pre>\n        <code className={language}\n          dangerouslySetInnerHTML={\n            { __html: this.state.isFetch ? escape(code) : ''}\n          }\n        />\n      </pre>\n    )\n  }\n}\n\nexport default CodeBlock\n"],"sourceRoot":""}